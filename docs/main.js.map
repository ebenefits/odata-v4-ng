{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/docs/adv-read/adv-read.component.ts","webpack:///./src/app/docs/adv-write/adv-write.component.ts","webpack:///./src/app/docs/basic-read/basic-read.component.ts","webpack:///./src/app/docs/basic-write/basic-write.component.ts","webpack:///./src/app/docs/batch/batch.component.html","webpack:///./src/app/docs/batch/batch.component.ts","webpack:///./src/app/docs/example/example-data.ts","webpack:///./src/app/docs/example/example.component.html","webpack:///./src/app/docs/example/example.component.ts","webpack:///./src/app/docs/metadata/metadata.component.ts","webpack:///./src/app/odata/odata-query/odata-query-abstract.ts","webpack:///./src/app/odata/odata-query/odata-query-batch.ts","webpack:///./src/app/odata/odata-query/odata-query.ts","webpack:///./src/app/odata/odata-query/quoted-string.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-annotation.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-entity-container.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-entity-set.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-enum-type.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-function-action.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-navigation-property-binding.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-reference.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-schema.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-singleton.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-structural-property.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-structured-type.ts","webpack:///./src/app/odata/odata-response/csdl/csdl-type-definition.ts","webpack:///./src/app/odata/odata-response/entity-collection.ts","webpack:///./src/app/odata/odata-response/metadata.ts","webpack:///./src/app/odata/odata-response/odata-response-abstract.ts","webpack:///./src/app/odata/odata-response/odata-response-batch.ts","webpack:///./src/app/odata/odata-response/odata-response.ts","webpack:///./src/app/odata/odata-service/http-options.ts","webpack:///./src/app/odata/odata-service/odata.service.ts","webpack:///./src/app/odata/odata.module.ts","webpack:///./src/app/odata/query-options/expand.ts","webpack:///./src/app/odata/query-options/filter/filter-string.ts","webpack:///./src/app/odata/query-options/operator.ts","webpack:///./src/app/odata/query-options/orderby.ts","webpack:///./src/app/odata/query-options/query-options.ts","webpack:///./src/app/odata/utils/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'odata-v4-ng',\n    children: []\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n</div>\\n\\n<h2>Usage Examples</h2>\\n<p> In \\\"app.module.ts\\\" import ODataModule and then inject the ODataService where you want to use this library.</p>\\n<p>\\n  All examples in this page are based on the publicly available OData V4 sample service TripPin (SERVICE_ROOT):\\n  <a href=\\\"https://services.odata.org/V4/TripPinServiceRW\\\">{{serviceRoot}}.</a>\\n  <br/> Metadata of this service is here:\\n  <a href=\\\"https://services.odata.org/V4/TripPinServiceRW/$metadata\\\">{{serviceRoot}}/$metadata.</a>\\n</p>\\n<p>\\n  <b>\\n    <i>\\n      Attention to make these examples working you need to visit the TripPin service page and accept the certificate which is surprisingly\\n      not valid.\\n      <br/> The lack of validity is due to the certificate host name not matching the actual host name of the service.\\n      <br/> Anyway the TripPin service has been created by Microsoft so it should be safe accepting the certificate.\\n    </i>\\n  </b>\\n</p>\\n<p>To run the example queries and get the response, click on the \\\"Execute query\\\" button. Service response could be slow depending\\n  on workload.</p>\\n<p>Any feedback is highly appreciated and please report issues! Thanks so much!</p>\\n\\n<p-tabView>\\n  <p-tabPanel header=\\\"Basic Read\\\">\\n    <ov4-basic-read></ov4-basic-read>\\n  </p-tabPanel>\\n  <p-tabPanel header=\\\"Basic Write\\\">\\n    <ov4-basic-write></ov4-basic-write>\\n  </p-tabPanel>\\n  <p-tabPanel header=\\\"Advanced Read\\\">\\n    <ov4-adv-read></ov4-adv-read>\\n  </p-tabPanel>\\n  <p-tabPanel header=\\\"Advanced Write\\\">\\n    <ov4-adv-write></ov4-adv-write>\\n  </p-tabPanel>\\n  <p-tabPanel header=\\\"Service Document and Metadata\\\">\\n    <ov4-metadata></ov4-metadata>\\n  </p-tabPanel>\\n  <p-tabPanel header=\\\"Batch\\\">\\n    <ov4-batch></ov4-batch>\\n  </p-tabPanel>\\n</p-tabView>\\n\\n<router-outlet></router-outlet>\"","import { ODataResponse } from './odata/odata-response/odata-response';\nimport { Component, OnInit } from '@angular/core';\nimport { SERVICE_ROOT } from './docs/example/example-data';\n\n@Component({\n  selector: 'ov4-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'odata-v4-ng';\n  serviceRoot: string = SERVICE_ROOT;\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { InputTextModule, TabViewModule } from 'primeng/primeng';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdvReadComponent } from './docs/adv-read/adv-read.component';\nimport { AdvWriteComponent } from './docs/adv-write/adv-write.component';\nimport { BasicReadComponent } from './docs/basic-read/basic-read.component';\nimport { BasicWriteComponent } from './docs/basic-write/basic-write.component';\nimport { BatchComponent } from './docs/batch/batch.component';\nimport { ExampleComponent } from './docs/example/example.component';\nimport { MetadataComponent } from './docs/metadata/metadata.component';\nimport { ODataModule } from './odata/odata.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExampleComponent,\n    BasicReadComponent,\n    BasicWriteComponent,\n    AdvReadComponent,\n    AdvWriteComponent,\n    MetadataComponent,\n    BatchComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ODataModule,\n    TabViewModule,\n    InputTextModule,\n    FormsModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ODataQuery } from '../../odata/odata-query/odata-query';\nimport { ODataService } from '../../odata/odata-service/odata.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BasicReadComponent, EXECUTE_GET } from '../basic-read/basic-read.component';\nimport { ExampleData, SERVICE_ROOT } from '../example/example-data';\n\n@Component({\n  selector: 'ov4-adv-read',\n  templateUrl: '../example/example.component.html'\n})\nexport class AdvReadComponent extends BasicReadComponent implements OnInit {\n  constructor(protected odataService: ODataService) { super(odataService); }\n\n  ngOnInit() {\n    this.examples = [];\n    // SINGLETON\n    let example: ExampleData = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get singleton';\n    example.query = SERVICE_ROOT + '/Me';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .singleton('Me');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .singleton('Me');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // SINGLETON PROPERTY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get singleton property';\n    example.query = SERVICE_ROOT + '/Me/AddressInfo';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .singleton('Me')\n      .property('AddressInfo');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .singleton('Me')\n    .property('AddressInfo');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // DERIVED ENTITYSET\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get derived entity set';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')/Trips(1003)/PlanItems/Microsoft.OData.SampleService.Models.TripPin.Flight';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'russellwhyte\\'')\n      .navigationProperty('Trips')\n      .entityKey(1003)\n      .navigationProperty('PlanItems')\n      .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .entityKey('\\\\\\'russellwhyte\\\\\\'')\n    .navigationProperty('Trips')\n    .entityKey(1003)\n    .navigationProperty('PlanItems')\n    .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // DERIVED ENTITY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get derived entity';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')/Trips(1003)/PlanItems(21)/Microsoft.OData.SampleService.Models.TripPin.Flight';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'russellwhyte\\'')\n      .navigationProperty('Trips')\n      .entityKey(1003)\n      .navigationProperty('PlanItems')\n      .entityKey(21)\n      .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .entityKey('\\\\\\'russellwhyte\\\\\\'')\n    .navigationProperty('Trips')\n    .entityKey(1003)\n    .navigationProperty('PlanItems')\n    .entityKey(21)\n    .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // FILTER DERIVED ENTITIES\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get derived entities filtered';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')/Trips(1003)/PlanItems/Microsoft.OData.SampleService.Models.TripPin.Flight?$filter=FlightNumber eq \\'FM1930\\'';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'russellwhyte\\'')\n      .navigationProperty('Trips')\n      .entityKey(1003)\n      .navigationProperty('PlanItems')\n      .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight')\n      .filter('FlightNumber eq \\'FM1930\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .entityKey('\\\\\\'russellwhyte\\\\\\'')\n    .navigationProperty('Trips')\n    .entityKey(1003)\n    .navigationProperty('PlanItems')\n    .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight')\n    .filter('FlightNumber eq \\\\\\'FM1930\\\\\\'');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n  }\n}\n","import { ODataResponse } from '../../odata/odata-response/odata-response';\nimport { ODataQuery } from '../../odata/odata-query/odata-query';\nimport { SERVICE_ROOT, ExampleData } from '../example/example-data';\nimport { ODataService } from '../../odata/odata-service/odata.service';\nimport { BasicWriteComponent } from '../basic-write/basic-write.component';\nimport { Component, OnInit } from '@angular/core';\n\nconst EXECUTE_BATCH = `example.subscr = example.odataQuery.execute().subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n);`;\n\n@Component({\n  selector: 'ov4-adv-write',\n  templateUrl: '../example/example.component.html'\n})\nexport class AdvWriteComponent extends BasicWriteComponent implements OnInit {\n  constructor(protected odataService: ODataService) {\n    super(odataService);\n    this.executeEnabled = false;\n  }\n\n  ngOnInit() {\n    this.examples = [];\n    // BATCH\n    const example: ExampleData = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Batch';\n    example.query = SERVICE_ROOT + '/$batch';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .batch()\n      .get(new ODataQuery(this.odataService, SERVICE_ROOT).entitySet('Airlines'))\n      .post(new ODataQuery(this.odataService, SERVICE_ROOT).entitySet('Airlines'), {\n        '@odata.type': 'Microsoft.OData.SampleService.Models.TripPin.Airline',\n        'AirlineCode': 'EK',\n        'Name': 'Emirates Airline'\n      })\n      .get(new ODataQuery(this.odataService, SERVICE_ROOT).entitySet('Airlines'));\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .batch()\n    .get(new ODataQuery(this.odataService, SERVICE_ROOT).entitySet('Airlines'))\n    .post(new ODataQuery(this.odataService, SERVICE_ROOT).entitySet('Airlines'), {\n      '@odata.type': 'Microsoft.OData.SampleService.Models.TripPin.Airline',\n      'AirlineCode': 'EK',\n      'Name': 'Emirates Airline'\n    })\n    .get(new ODataQuery(this.odataService, SERVICE_ROOT).entitySet('Airlines'));\n${EXECUTE_BATCH}`;\n    example.func = this.executeBatch;\n  }\n\n  executeBatch(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.execute().subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n    );\n  }\n}\n","import { ODataResponse } from '../../odata/odata-response/odata-response';\nimport { ODataQuery } from '../../odata/odata-query/odata-query';\nimport { ODataService } from '../../odata/odata-service/odata.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ExampleData, SERVICE_ROOT } from '../example/example-data';\nimport { ExampleComponent } from '../example/example.component';\n\nexport const EXECUTE_GET = `example.odataQuery.get().subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n);`;\n\n@Component({\n  selector: 'ov4-basic-read',\n  templateUrl: '../example/example.component.html'\n})\nexport class BasicReadComponent extends ExampleComponent implements OnInit {\n  constructor(protected odataService: ODataService) { super(odataService); }\n\n  ngOnInit() {\n    this.examples = [];\n    // ENTITY SET\n    let example: ExampleData = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get entity set';\n    example.query = SERVICE_ROOT + '/People';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // ENTITY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get entity';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'russellwhyte\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .entityKey('\\\\\\'russellwhyte\\\\\\'');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // PROPERTY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get property';\n    example.query = SERVICE_ROOT + '/Airports(\\'KSFO\\')/Name';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('Airports')\n      .entityKey('\\'KSFO\\'')\n      .property('Name');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('Airports')\n    .entityKey('\\\\\\'KSFO\\\\\\'')\n    .property('Name');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // COMPLEX TYPE PROPERTY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get complex type property';\n    example.query = SERVICE_ROOT + '/Airports(\\'KSFO\\')/Location/Address';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('Airports')\n      .entityKey('\\'KSFO\\'')\n      .property('Location/Address');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('Airports')\n    .entityKey('\\\\\\'KSFO\\\\\\'')\n    .property('Location/Address');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // PROPERTY RAW VALUE\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get property raw value';\n    example.query = SERVICE_ROOT + '/Airports(\\'KSFO\\')/Name/$value';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('Airports')\n      .entityKey('\\'KSFO\\'')\n      .property('Name')\n      .value();\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('Airports')\n    .entityKey('\\\\\\'KSFO\\\\\\'')\n    .property('Name')\n    .value();\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // FILTER ENTITIES\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get filtered entities';\n    example.query = SERVICE_ROOT + '/People?$filter=FirstName eq \\'Scott\\'';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .filter('FirstName eq \\'Scott\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .filter('FirstName eq \\\\\\'Scott\\\\\\'');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // FILTER COMPLEX TYPES\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get filtered complex types';\n    example.query = SERVICE_ROOT + '/Airports?$filter=contains(Location/Address, \\'San Francisco\\')';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('Airports')\n      .filter('contains(Location/Address, \\'San Francisco\\')');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('Airports')\n    .filter('contains(Location/Address, \\\\\\'San Francisco\\\\\\')');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // FILTER ENUM PROPERTIES\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get filtered enum properties';\n    example.query = SERVICE_ROOT + '/People?$filter=Gender eq Microsoft.OData.SampleService.Models.TripPin.PersonGender\\'Female\\'';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .filter('Gender eq Microsoft.OData.SampleService.Models.TripPin.PersonGender\\'Female\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .filter('Gender eq Microsoft.OData.SampleService.Models.TripPin.PersonGender\\\\\\'Female\\\\\\'');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // EXPAND\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get expanded entities';\n    example.query = SERVICE_ROOT + '/People?$expand=Trips';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .expand('Trips');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .expand('Trips');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // FILTERED EXPAND\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get expanded entities with nested filter';\n    example.query = SERVICE_ROOT + '/People?$expand=Trips($filter=Name eq \\'Trip in US\\')';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .expand('Trips($filter=Name eq \\'Trip in US\\')');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .expand('Trips($filter=Name eq \\\\\\'Trip in US\\\\\\')');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // ORDERBY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get ordered entities';\n    example.query = SERVICE_ROOT + '/People(\\'scottketchum\\')/Trips?$orderby=EndsAt desc';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'scottketchum\\'')\n      .navigationProperty('Trips')\n      .orderby('EndsAt desc');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .entityKey('\\\\\\'scottketchum\\\\\\'')\n    .navigationProperty('Trips')\n    .orderby('EndsAt desc');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // TOP\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get entities using top';\n    example.query = SERVICE_ROOT + '/People?$top=2';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .top(2);\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .top(2);\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // SKIP\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get entities using skip';\n    example.query = SERVICE_ROOT + '/People?$skip=18';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .skip(18);\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .skip(18);\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // COUNT\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get entities count';\n    example.query = SERVICE_ROOT + '/People?$count';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .countSegment();\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .countSegment();\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // PROJECTED ENTITIES\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get projected entities';\n    example.query = SERVICE_ROOT + '/Airports?$select=Name, IcaoCode';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('Airports')\n      .select('Name, IcaoCode');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('Airports')\n    .select('Name, IcaoCode');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // SEARCH\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get entities matching search';\n    example.query = SERVICE_ROOT + '/People?$search=Boise';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .search('Boise');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .search('Boise');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // UNBOUND FUNCTION\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Unbound function';\n    example.query = SERVICE_ROOT + '/GetNearestAirport(lat = 33, lon = -118)';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .functionCall('GetNearestAirport(lat = 33, lon = -118)');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .functionCall('GetNearestAirport(lat = 33, lon = -118)');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // BOUND FUNCTION\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Bound function';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')/Microsoft.OData.SampleService.Models.TripPin.GetFavoriteAirline()';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'russellwhyte\\'')\n      .functionCall('Microsoft.OData.SampleService.Models.TripPin.GetFavoriteAirline()');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .entitySet('People')\n    .entityKey('\\\\\\'russellwhyte\\\\\\'')\n    .functionCall('Microsoft.OData.SampleService.Models.TripPin.GetFavoriteAirline()');\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n  }\n\n  execute(example: ExampleData): void {\n    if (example.func) {\n      example.func(example, this.odataService);\n    }\n  }\n\n  executeGet(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.get().subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n    );\n  }\n\n  executeAllGet(): void {\n    if (this.examples) {\n      for (const example of this.examples) {\n        this.executeGet(example, this.odataService);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ODataService } from '../../odata/odata-service/odata.service';\nimport { ExampleData, SERVICE_ROOT } from '../example/example-data';\nimport { ODataQuery } from '../../odata/odata-query/odata-query';\nimport { ExampleComponent } from '../example/example.component';\nimport { ODataResponse } from '../../odata/odata-response/odata-response';\n\nconst EXECUTE_CREATE_ENTITY = `example.subscr = example.odataQuery.post({\n  '@odata.type': 'Microsoft.OData.SampleService.Models.TripPin.Person',\n  'UserName': 'teresa',\n  'FirstName': 'Teresa',\n  'LastName': 'Gilbert',\n  'Gender': 'Female',\n  'Emails': ['teresa@example.com', 'teresa@contoso.com'],\n  'AddressInfo': [\n    {\n      'Address': '1 Suffolk Ln.',\n      'City':\n      {\n        'CountryRegion': 'United States',\n        'Name': 'Boise',\n        'Region': 'ID'\n      }\n    }]\n}).subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n  );`;\nconst EXECUTE_DELETE_ENTITY = `example.subscr = example.odataQuery.delete().subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n);`;\nconst EXECUTE_DELETE_ENTITY_ETAG = `example.subscr = example.odataQuery.delete('W/\"08D15F3DD9A61539\"').subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n);`;\nconst EXECUTE_UPDATE_ENTITY = `example.subscr = example.odataQuery.patch({\n  '@odata.type': 'Microsoft.OData.SampleService.Models.TripPin.Person',\n  'Emails': ['Russell@example.com', 'Russell@contoso.com', 'newRussell@contoso.com']\n}).subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n  );`;\nconst EXECUTE_UPDATE_ENTITY_ETAG = `example.subscr = example.odataQuery.patch({\n  '@odata.type': '#Microsoft.OData.SampleService.Models.TripPin.Person',\n  'FirstName' : 'CLYDE'\n}, 'W/\"08D15F3DD9126D84\"').subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n  );`;\nconst EXECUTE_CREATE_RELATIONSHIP = `example.subscr = example.odataQuery.post({\n  '@odata.id': new ODataQuery(odataService, SERVICE_ROOT).entitySet('People').entityKey('\\\\\\'vincentcalabrese\\\\\\'').toString()\n}).subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n  );`;\nconst EXECUTE_CHANGE_RELATIONSHIP = `example.subscr = example.odataQuery.put({\n  '@odata.id': new ODataQuery(odataService, SERVICE_ROOT).entitySet('Airlines').entityKey('\\\\\\'FM\\\\\\'').toString()\n}).subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = odataResponse.toString();\n  },\n  (error: string) => {\n    example.response = error;\n  }\n  );`;\nconst EXECUTE_BOUND_ACTION = `example.subscr = example.odataQuery.post({\n    'userName': 'scottketchum',\n    'tripId': 1001\n  }).subscribe(\n    (odataResponse: ODataResponse) => {\n      example.response = odataResponse.toString();\n    },\n    (error: string) => {\n      example.response = error;\n    }\n    );`;\n\n@Component({\n  selector: 'ov4-basic-write',\n  templateUrl: '../example/example.component.html'\n})\nexport class BasicWriteComponent extends ExampleComponent implements OnInit {\n  constructor(protected odataService: ODataService) {\n    super(odataService);\n    this.executeEnabled = false;\n  }\n\n  ngOnInit() {\n    this.examples = [];\n    // CREATE ENTITY\n    let example: ExampleData = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Create entity';\n    example.query = SERVICE_ROOT + '/People';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People');\n  ${EXECUTE_CREATE_ENTITY}`;\n    example.func = this.executeCreateEntity;\n    // DELETE ENTITY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Delete entity';\n    example.query = SERVICE_ROOT + '/People(\\'vincentcalabrese\\')';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'vincentcalabrese\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\\\\\'vincentcalabrese\\\\\\'');\n  ${EXECUTE_DELETE_ENTITY}`;\n    example.func = this.executeDeleteEntity;\n    // UPDATE ENTITY\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Update entity';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People').\n      entityKey('\\'russellwhyte\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People').\n      entityKey('\\\\\\'russellwhyte\\\\\\'');\n  ${EXECUTE_UPDATE_ENTITY}`;\n    example.func = this.executeUpdateEntity;\n    // CREATE RELATIONSHIP\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Create a relationship between entities';\n    example.query = SERVICE_ROOT + '/People(\\'scottketchum\\')/Friends/$ref';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'scottketchum\\'')\n      .navigationProperty('Friends')\n      .ref();\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\\\\\'scottketchum\\\\\\'')\n      .navigationProperty('Friends')\n      .ref();\n  ${EXECUTE_CREATE_RELATIONSHIP}`;\n    example.func = this.executeCreateRelationship;\n    // CHANGE RELATIONSHIP\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Change relationship between entities';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')/Trips(1001)/PlanItems(11)/Microsoft.OData.SampleService.Models.TripPin.Flight/Airline/$ref';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'russellwhyte\\'')\n      .navigationProperty('Trips')\n      .entityKey(1001)\n      .navigationProperty('PlanItems')\n      .entityKey(11)\n      .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight')\n      .navigationProperty('Airline')\n      .ref();\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\\\\\'russellwhyte\\\\\\'')\n      .navigationProperty('Trips')\n      .entityKey(1001)\n      .navigationProperty('PlanItems')\n      .entityKey(11)\n      .typeName('Microsoft.OData.SampleService.Models.TripPin.Flight')\n      .navigationProperty('Airline')\n      .ref();\n  ${EXECUTE_CHANGE_RELATIONSHIP}`;\n    example.func = this.executeChangeRelationship;\n    // BOUND ACTION\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Bound action';\n    example.query = SERVICE_ROOT + '/People(\\'russellwhyte\\')/Microsoft.OData.SampleService.Models.TripPin.ShareTrip';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'russellwhyte\\'')\n      .actionCall('Microsoft.OData.SampleService.Models.TripPin.ShareTrip');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\\\\\'russellwhyte\\\\\\'')\n      .actionCall('Microsoft.OData.SampleService.Models.TripPin.ShareTrip');\n  ${EXECUTE_BOUND_ACTION}`;\n    example.func = this.executeBoundAction;\n    // UPDATE ENTITY ETAG\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Update entity with ETag';\n    example.query = SERVICE_ROOT + '/People(\\'clydeguess\\')';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'clydeguess\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\\\\\'clydeguess\\\\\\'');\n  ${EXECUTE_UPDATE_ENTITY_ETAG}`;\n    example.func = this.executeUpdateEntityETag;\n    // DELETE ENTITY ETAG\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Delete entity with ETag';\n    example.query = SERVICE_ROOT + '/People(\\'vincentcalabrese\\')';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\'vincentcalabrese\\'');\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .entitySet('People')\n      .entityKey('\\\\\\'vincentcalabrese\\\\\\'');\n  ${EXECUTE_DELETE_ENTITY_ETAG}`;\n    example.func = this.executeDeleteEntityETag;\n  }\n\n  executeCreateEntity(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.post({\n      '@odata.type': 'Microsoft.OData.SampleService.Models.TripPin.Person',\n      'UserName': 'teresa',\n      'FirstName': 'Teresa',\n      'LastName': 'Gilbert',\n      'Gender': 'Female',\n      'Emails': ['teresa@example.com', 'teresa@contoso.com'],\n      'AddressInfo': [\n        {\n          'Address': '1 Suffolk Ln.',\n          'City':\n          {\n            'CountryRegion': 'United States',\n            'Name': 'Boise',\n            'Region': 'ID'\n          }\n        }]\n    }).subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n      );\n  }\n\n  executeDeleteEntity(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.delete().subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n    );\n  }\n\n  executeDeleteEntityETag(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.delete('W/\"08D15F3DD9A61539\"').subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n    );\n  }\n\n  executeUpdateEntity(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.patch({\n      '@odata.type': 'Microsoft.OData.SampleService.Models.TripPin.Person',\n      'Emails': ['Russell@example.com', 'Russell@contoso.com', 'newRussell@contoso.com']\n    }).subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n      );\n  }\n\n  executeUpdateEntityETag(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.patch({\n      '@odata.type': '#Microsoft.OData.SampleService.Models.TripPin.Person',\n      'FirstName': 'CLYDE'\n    }, 'W/\"08D15F3DD9126D84\"').subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n      );\n  }\n\n  executeCreateRelationship(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.post({\n      '@odata.id': new ODataQuery(odataService, SERVICE_ROOT).entitySet('People').entityKey('\\'vincentcalabrese\\'').toString()\n    }).subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n      );\n  }\n\n  executeChangeRelationship(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.put({\n      '@odata.id': new ODataQuery(odataService, SERVICE_ROOT).entitySet('Airlines').entityKey('\\'FM\\'').toString()\n    }).subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n      );\n  }\n\n  executeBoundAction(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.post({\n      'userName': 'scottketchum',\n      'tripId': 1001\n    }).subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = odataResponse.toString();\n      },\n      (error: string) => {\n        example.response = error;\n      }\n      );\n  }\n\n}\n","module.exports = \"<span class=\\\"ui-float-label\\\">\\n  <input id=\\\"service-root\\\" type=\\\"text\\\" size=\\\"60\\\" pInputText [(ngModel)]=\\\"serviceRoot\\\">\\n  <label for=\\\"service-root\\\">Service Root</label>\\n</span>\\n<span class=\\\"ui-float-label\\\">\\n  <input id=\\\"entity-set\\\" type=\\\"text\\\" size=\\\"60\\\" pInputText [(ngModel)]=\\\"entitySet\\\">\\n  <label for=\\\"entity-set\\\">Entity Set</label>\\n</span>\\n<span class=\\\"ui-float-label\\\">\\n  <input id=\\\"entity-id\\\" type=\\\"text\\\" size=\\\"60\\\" pInputText [(ngModel)]=\\\"entityId\\\">\\n  <label for=\\\"entity-id\\\">Entity ID</label>\\n</span>\\n<span class=\\\"ui-float-label\\\">\\n  <input id=\\\"entity-property-patch\\\" type=\\\"text\\\" size=\\\"60\\\" pInputText [(ngModel)]=\\\"entityPropertyPatch\\\">\\n  <label for=\\\"entity-property-patch\\\">Entity property to change using PATCH</label>\\n</span>\\n<span class=\\\"ui-float-label\\\">\\n  <input id=\\\"entity-property-put\\\" type=\\\"text\\\" size=\\\"60\\\" pInputText [(ngModel)]=\\\"entityPropertyPut\\\">\\n  <label for=\\\"entity-property-put\\\">Entity property to change using PUT</label>\\n</span>\\n<br/>\\n<input type=\\\"button\\\" value=\\\"Execute all queries\\\" (click)=\\\"executeAllQueries()\\\">\\n<div *ngFor=\\\"let batchItem of batchData\\\">\\n  <h4>{{batchItem.requestDescription}} Batch Response</h4>\\n  <textarea class=\\\"response\\\" readonly=\\\"true\\\">{{batchItem.responseBatch.toString()}}</textarea>\\n  <h4 *ngIf=\\\"batchItem.responses.length\\\">{{batchItem.requestDescription}} Batch Response Parts</h4>\\n  <textarea *ngFor=\\\"let response of batchItem.responses\\\" class=\\\"response\\\" readonly=\\\"true\\\">{{response?.toString()}}</textarea>\\n</div>\"","\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ODataQuery } from '../../odata/odata-query/odata-query';\nimport { ODataQueryBatch } from '../../odata/odata-query/odata-query-batch';\nimport { ODataService } from '../../odata/odata-service/odata.service';\nimport { ODataResponse } from '../../odata/odata-response/odata-response';\n\nexport class BatchItem {\n  constructor(\n    public requestDescription: string,\n    public observable: Observable<ODataResponse>,\n    public responseBatch: ODataResponse,\n    public responses: ODataResponse[]) { }\n}\n\n@Component({\n  selector: 'ov4-batch',\n  templateUrl: './batch.component.html'\n})\nexport class BatchComponent implements OnInit, OnDestroy {\n  serviceRoot: string;\n  entitySet: string;\n  entityId: string;\n  entityPropertyPatch: string;\n  entityPropertyPut: string;\n  batchData: BatchItem[] = [];\n\n  constructor(private odataService: ODataService) { }\n\n  ngOnInit() { }\n\n  ngOnDestroy() { }\n\n  executeAllQueries(): void {\n    const batchData: BatchItem[] = [];\n\n    // POST\n    let odataQueryBatch: ODataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    const odataQuery: ODataQuery = new ODataQuery(this.odataService, this.serviceRoot).entitySet(this.entitySet);\n    let body1: any = {}; body1[this.entityId] = 'id1';\n    let body2: any = {}; body2[this.entityId] = 'id2';\n    odataQueryBatch.post(odataQuery, body1).post(odataQuery, body2);\n    batchData.push(new BatchItem('Add ' + this.entitySet, odataQueryBatch.execute(), null, null));\n\n    // GET\n    odataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    odataQueryBatch.get(odataQuery);\n    batchData.push(new BatchItem('Get ' + this.entitySet, odataQueryBatch.execute(), null, null));\n\n    // PATCH\n    odataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    const odataQuery1: ODataQuery = new ODataQuery(this.odataService, this.serviceRoot).entitySet(this.entitySet).entityKey('\\'id1\\'');\n    const odataQuery2: ODataQuery = new ODataQuery(this.odataService, this.serviceRoot).entitySet(this.entitySet).entityKey('\\'id2\\'');\n    body1 = {}; body1[this.entityPropertyPatch] = 'patch1';\n    body2 = {}; body2[this.entityPropertyPatch] = 'patch2';\n    odataQueryBatch.patch(odataQuery1, body1).patch(odataQuery2, body2);\n    batchData.push(new BatchItem('Update ' + this.entitySet + ' using PATCH', odataQueryBatch.execute(), null, null));\n\n    // GET\n    odataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    odataQueryBatch.get(odataQuery);\n    batchData.push(new BatchItem('Get ' + this.entitySet, odataQueryBatch.execute(), null, null));\n\n    // PUT\n    odataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    body1 = {}; body1[this.entityPropertyPut] = 'put1';\n    body2 = {}; body2[this.entityPropertyPut] = 'put2';\n    odataQueryBatch.put(odataQuery1, body1).put(odataQuery2, body2);\n    batchData.push(new BatchItem('Update ' + this.entitySet + ' using PUT', odataQueryBatch.execute(), null, null));\n\n    // GET\n    odataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    odataQueryBatch.get(odataQuery);\n    batchData.push(new BatchItem('Get ' + this.entitySet, odataQueryBatch.execute(), null, null));\n\n    // DELETE\n    odataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    odataQueryBatch.delete(odataQuery1).delete(odataQuery2);\n    batchData.push(new BatchItem('Delete ' + this.entitySet, odataQueryBatch.execute(), null, null));\n\n    // GET\n    odataQueryBatch = new ODataQuery(this.odataService, this.serviceRoot).batch();\n    odataQueryBatch.get(odataQuery);\n    batchData.push(new BatchItem('Get ' + this.entitySet, odataQueryBatch.execute(), null, null));\n\n    this.execute(0, batchData);\n  }\n\n  private execute(index: number, batchData: BatchItem[]): void {\n    const batchItem: BatchItem = batchData[index];\n\n    batchItem.observable.subscribe(\n      (odataResponse: ODataResponse) => {\n        batchItem.responseBatch = odataResponse;\n        batchItem.responses = odataResponse.toODataResponseBatch().getODataResponses();\n\n        if (index === batchData.length - 1) {\n          this.batchData = batchData;\n        } else {\n          this.execute(++index, batchData);\n        }\n      }\n    );\n  }\n}\n","import { ODataQueryBatch } from '../../odata/odata-query/odata-query-batch';\nimport { ODataQuery } from '../../odata/odata-query/odata-query';\nimport { Subscription } from 'rxjs';\n\nexport const SERVICE_ROOT = 'https://services.odata.org/v4/TripPinServiceRW';\n\nexport class ExampleData {\n    public title: string;\n    public query: string;\n    public odataQuery: any;\n    public code: string;\n    public response: string;\n    public func: Function;\n    public subscr: Subscription;\n}\n","module.exports = \"<input type=\\\"button\\\" value=\\\"Execute all queries\\\" (click)=\\\"executeAllGet()\\\">\\n\\n<div *ngFor=\\\"let example of examples\\\">\\n  <h3>{{example.title}}</h3>\\n  <h4>Query</h4>\\n  <span>{{example.query}}</span>\\n  <h4>Code</h4>\\n  <pre class=\\\"code\\\">{{example.code}}</pre>\\n  <h4 *ngIf=\\\"executeEnabled\\\">Response\\n    <input type=\\\"button\\\" value=\\\"Execute query\\\" (click)=\\\"execute(example)\\\">\\n  </h4>\\n  <textarea *ngIf=\\\"executeEnabled\\\" class=\\\"response\\\" readonly=\\\"true\\\">{{example.response}}</textarea>\\n  <hr/>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ExampleData } from './example-data';\nimport { ODataService } from '../../odata/odata-service/odata.service';\n\n@Component({\n  selector: 'ov4-example',\n  templateUrl: './example.component.html'\n})\nexport class ExampleComponent implements OnInit, OnDestroy {\n  executeEnabled = true;\n  examples: ExampleData[];\n\n  constructor(protected odataService: ODataService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.examples) {\n      for (const example of this.examples) {\n        if (example.subscr) {\n          example.subscr.unsubscribe();\n        }\n      }\n    }\n  }\n\n  execute(example: ExampleData): void {\n    if (example.func) {\n      example.func(example, this.odataService);\n    }\n  }\n}\n","import { ODataResponse } from '../../odata/odata-response/odata-response';\nimport { ODataQuery } from '../../odata/odata-query/odata-query';\nimport { SERVICE_ROOT, ExampleData } from '../example/example-data';\nimport { EXECUTE_GET, BasicReadComponent } from '../basic-read/basic-read.component';\nimport { ODataService } from '../../odata/odata-service/odata.service';\nimport { Component, OnInit } from '@angular/core';\n\nexport const EXECUTE_GET_TO_METADATA = `example.odataQuery.get().subscribe(\n  (odataResponse: ODataResponse) => {\n    example.response = JSON.stringify(odataResponse.toMetadata(), null, 4);\n  },\n  (error: string) => {\n    example.response = error;\n  }\n);`;\n\n@Component({\n  selector: 'ov4-metadata',\n  templateUrl: '../example/example.component.html'\n})\nexport class MetadataComponent extends BasicReadComponent implements OnInit {\n  constructor(protected odataService: ODataService) { super(odataService); }\n\n  ngOnInit() {\n    this.examples = [];\n    // SERVICE DOCUMENT\n    let example: ExampleData = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get service document';\n    example.query = SERVICE_ROOT;\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT);\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT);\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // SERVICE METADATA\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get service metadata';\n    example.query = SERVICE_ROOT + '/$metadata';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .metadata();\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .metadata();\n${EXECUTE_GET}`;\n    example.func = this.executeGet;\n    // SERVICE METADATA TO JSON\n    example = new ExampleData();\n    this.examples.push(example);\n    example.title = 'Get service metadata as a json object';\n    example.query = SERVICE_ROOT + '/$metadata';\n    example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n      .metadata();\n    example.code = `example.odataQuery = new ODataQuery(this.odataService, SERVICE_ROOT)\n    .metadata();\n${EXECUTE_GET_TO_METADATA}`;\n    example.func = this.executeGetToMetadata;\n  }\n\n  executeGetToMetadata(example: ExampleData, odataService: ODataService): void {\n    example.subscr = example.odataQuery.get().subscribe(\n      (odataResponse: ODataResponse) => {\n        example.response = JSON.stringify(odataResponse.toMetadata(), null, 4);\n      },\n      (error: string) => {\n        example.response = error;\n      }\n    );\n  }\n}\n","import { Utils } from '../utils/utils';\nimport { ODataService } from '../odata-service/odata.service';\n\nexport abstract class ODataQueryAbstract {\n  protected odataService: ODataService;\n  protected serviceRoot: string;\n  protected queryString: string;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.odataService = odataService;\n    this.serviceRoot = serviceRoot;\n    this.queryString = serviceRoot;\n  }\n\n  abstract toString();\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { UUID } from 'angular2-uuid';\nimport { Observable } from 'rxjs';\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { HttpOptionsI } from '../odata-service/http-options';\nimport { ODataService } from '../odata-service/odata.service';\nimport { Utils } from '../utils/utils';\nimport { ODataQuery } from './odata-query';\nimport { ODataQueryAbstract } from './odata-query-abstract';\n\n\nexport enum Method {\n  GET, POST, PUT, PATCH, DELETE\n}\n\nexport class BatchRequest {\n  constructor(\n    public method: Method,\n    public odataQuery: ODataQuery,\n    public body?: any,\n    public httpOptions?: HttpOptionsI) { }\n}\n\nexport class ODataQueryBatch extends ODataQueryAbstract {\n  private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n  private static readonly BATCH_PREFIX = 'batch_';\n  private static readonly CHANGESET_PREFIX = 'changeset_';\n  private static readonly NEWLINE = '\\r\\n';\n\n  // CONSTANT SEGMENTS\n  private static readonly $BATCH = '$batch';\n\n  // HEADERS\n  private static readonly HTTP11 = 'HTTP/1.1';\n  private static readonly ODATA_VERSION = 'OData-Version';\n  private static readonly CONTENT_TYPE = 'Content-Type';\n  private static readonly ACCEPT = 'Accept';\n  private static readonly CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\n  private static readonly CONTENT_ID = 'Content-ID';\n\n  // HEADER VALUES\n  private static readonly VERSION_4_0 = '4.0';\n  private static readonly MULTIPART_MIXED = 'multipart/mixed';\n  private static readonly MULTIPART_MIXED_BOUNDARY = 'multipart/mixed;boundary=';\n  private static readonly APPLICATION_HTTP = 'application/http';\n  private static readonly BINARY = 'binary';\n  private static readonly APPLICATION_JSON = 'application/json';\n\n  // VARIABLES\n  private requests: BatchRequest[];\n  private batchBoundary: string;\n  private changesetBoundary: string;\n  private changesetID: number;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    super(odataService, serviceRoot);\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.queryString = Utils.appendSegment(serviceRoot, ODataQueryBatch.$BATCH);\n    this.requests = [];\n    this.batchBoundary = ODataQueryBatch.BATCH_PREFIX + this.getUUID();\n    this.changesetBoundary = null;\n    this.changesetID = 1;\n  }\n\n  get(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.GET, odataQuery, undefined, httpOptions));\n    return this;\n  }\n\n  post(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.POST, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  put(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.PUT, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  patch(odataQuery: ODataQuery, body: any, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.PATCH, odataQuery, body, httpOptions));\n    return this;\n  }\n\n  delete(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): ODataQueryBatch {\n    Utils.requireNotNullNorUndefined(odataQuery, 'odataQuery');\n    this.requests.push(new BatchRequest(Method.DELETE, odataQuery, undefined, httpOptions));\n    return this;\n  }\n\n  execute(httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    // set headers\n    if (Utils.isNullOrUndefined(httpOptions)) {\n      httpOptions = {};\n    }\n    if (Utils.isNullOrUndefined(httpOptions.headers)) {\n      httpOptions.headers = new HttpHeaders();\n    }\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.ODATA_VERSION, ODataQueryBatch.VERSION_4_0);\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.CONTENT_TYPE, ODataQueryBatch.MULTIPART_MIXED_BOUNDARY + this.batchBoundary);\n    httpOptions.headers = httpOptions.headers.set(ODataQueryBatch.ACCEPT, ODataQueryBatch.MULTIPART_MIXED);\n\n    // send request\n    return this.odataService.post(this, this.getBody(), httpOptions);\n  }\n\n  toString(): string {\n    return this.queryString;\n  }\n\n  getBody(): string {\n    let res = '';\n\n    for (const request of this.requests) {\n      const method: Method = request.method;\n      const odataQuery: ODataQuery = request.odataQuery;\n      const httpOptions: HttpOptionsI = request.httpOptions;\n      const body: any = request.body;\n\n      // if method is GET and there is a changeset boundary open then close it\n      if (method === Method.GET && Utils.isNotNullNorUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + ODataQueryBatch.NEWLINE;\n        this.changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (Utils.isNullOrUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + ODataQueryBatch.NEWLINE;\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (method !== Method.GET) {\n        if (Utils.isNullOrUndefined(this.changesetBoundary)) {\n          this.changesetBoundary = ODataQueryBatch.CHANGESET_PREFIX + this.getUUID();\n          res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.MULTIPART_MIXED_BOUNDARY + this.changesetBoundary + ODataQueryBatch.NEWLINE;\n          res += ODataQueryBatch.NEWLINE;\n        }\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.NEWLINE;\n      }\n\n      res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.APPLICATION_HTTP + ODataQueryBatch.NEWLINE;\n      res += ODataQueryBatch.CONTENT_TRANSFER_ENCODING + ': ' + ODataQueryBatch.BINARY + ODataQueryBatch.NEWLINE;\n\n      if (method !== Method.GET) {\n        res += ODataQueryBatch.CONTENT_ID + ': ' + this.changesetID++ + ODataQueryBatch.NEWLINE;\n      }\n\n      res += ODataQueryBatch.NEWLINE;\n      res += Method[method] + ' ' + odataQuery + ' ' + ODataQueryBatch.HTTP11 + ODataQueryBatch.NEWLINE;\n\n      res += this.getHeaders(method, httpOptions);\n\n      res += ODataQueryBatch.NEWLINE;\n      if (method === Method.GET || method === Method.DELETE) {\n        res += ODataQueryBatch.NEWLINE;\n      } else {\n        res += JSON.stringify(body) + ODataQueryBatch.NEWLINE;\n      }\n    }\n\n    if (res.length) {\n      if (Utils.isNotNullNorUndefined(this.changesetBoundary)) {\n        res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + ODataQueryBatch.NEWLINE;\n        this.changesetBoundary = null;\n      }\n      res += ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + ODataQueryBatch.BOUNDARY_PREFIX_SUFFIX;\n    }\n\n    return res;\n  }\n\n  protected getHeaders(method: Method, httpOptions: HttpOptionsI): string {\n    let res = '';\n\n    if (method === Method.POST || method === Method.PATCH || method === Method.PUT) {\n      res += ODataQueryBatch.CONTENT_TYPE + ': ' + ODataQueryBatch.APPLICATION_JSON + ODataQueryBatch.NEWLINE;\n    }\n\n    if (Utils.isNullOrUndefined(httpOptions) || Utils.isNullOrUndefined(httpOptions.headers)) {\n      return res;\n    }\n\n    for (const key of httpOptions.headers.keys()) {\n      res += key + ': ' + httpOptions.headers.getAll(key) + ODataQueryBatch.NEWLINE;\n    }\n\n    return res;\n  }\n\n  getUUID(): string {\n    return UUID.UUID();\n  }\n}\n","import { Observable } from 'rxjs';\n\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { HttpOptionsI } from '../odata-service/http-options';\nimport { ODataService } from '../odata-service/odata.service';\nimport { Expand } from '../query-options/expand';\nimport { Filter } from '../query-options/filter/filter';\nimport { Orderby } from '../query-options/orderby';\nimport { QueryOptions } from '../query-options/query-options';\nimport { Search } from '../query-options/search/search';\nimport { Utils } from '../utils/utils';\nimport { ODataQueryAbstract } from './odata-query-abstract';\nimport { ODataQueryBatch } from './odata-query-batch';\n\nexport class ODataQuery extends ODataQueryAbstract {\n  // QUERY OPTIONS SEPARATOR\n  static readonly SEPARATOR = '&';\n\n  // SEGMENT NAMES\n  private static readonly METADATA = 'metadata';\n  private static readonly ENTITY_SET = 'entitySet';\n  private static readonly ENTITY_KEY = 'entityKey';\n  private static readonly SINGLETON = 'singleton';\n  private static readonly TYPE_NAME = 'typeName';\n  private static readonly PROPERTY = 'property';\n  private static readonly NAVIGATION_PROPERTY = 'navigationProperty';\n  private static readonly REF = 'ref';\n  private static readonly VALUE = 'value';\n  private static readonly COUNT = 'count';\n  private static readonly FUNCTION_CALL = 'functionCall';\n  private static readonly ACTION_CALL = 'actionCall';\n\n  // CONSTANT SEGMENTS\n  private static readonly $METADATA = '$metadata';\n  private static readonly $REF = '$ref';\n  private static readonly $VALUE = '$value';\n  private static readonly $COUNT = '$count';\n\n  // VARIABLES\n  private queryOptions: QueryOptions;\n  private segments: string[];\n  private lastSegment: string;\n\n  constructor(odataService: ODataService, serviceRoot: string) {\n    super(odataService, serviceRoot);\n    Utils.requireNotNullNorUndefined(odataService, 'odataService');\n    Utils.requireNotNullNorUndefined(serviceRoot, 'serviceRoot');\n    Utils.requireNotEmpty(serviceRoot, 'serviceRoot');\n    this.queryOptions = new QueryOptions(ODataQuery.SEPARATOR);\n    this.segments = [];\n    this.lastSegment = null;\n  }\n\n  // QUERY SEGMENTS\n\n  metadata(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.METADATA), ODataQuery.METADATA);\n    if (this.segments.length) {\n      throw new Error('metadata segment cannot be appended to other segments');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$METADATA);\n    this.addSegment(ODataQuery.METADATA);\n    return this;\n  }\n\n  entitySet(entitySet: string): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.ENTITY_SET), ODataQuery.ENTITY_SET);\n    Utils.requireNotNullNorUndefined(entitySet, 'entitySet');\n    Utils.requireNotEmpty(entitySet, 'entitySet');\n    this.queryString = Utils.appendSegment(this.queryString, entitySet);\n    this.addSegment(ODataQuery.ENTITY_SET);\n    return this;\n  }\n\n  entityKey(entityKey: any | any[]): ODataQuery {\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('entityKey can only be appended to entitySet or navigationProperty');\n    }\n    Utils.requireNotNullNorUndefined(entityKey, 'entityKey');\n    Utils.requireNotEmpty(entityKey, 'entityKey');\n    entityKey = Utils.getValueURI(entityKey, true);\n    this.queryString = Utils.removeEndingSeparator(this.queryString) + '(' + entityKey + ')';\n    this.addSegment(ODataQuery.ENTITY_KEY);\n    return this;\n  }\n\n  singleton(singleton: string) {\n    if (this.segments.length) {\n      throw new Error('singleton segment cannot be appended to other segments');\n    }\n    Utils.requireNotNullNorUndefined(singleton, 'singleton');\n    Utils.requireNotEmpty(singleton, 'singleton');\n    this.queryString = Utils.appendSegment(this.queryString, singleton);\n    this.addSegment(ODataQuery.SINGLETON);\n    return this;\n  }\n\n  typeName(typeName: string) {\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY && this.lastSegment !== ODataQuery.ENTITY_KEY) {\n      throw new Error('typeName can only be appended to entitySet, navigationProperty or entityKey');\n    }\n    Utils.requireNotNullNorUndefined(typeName, 'typeName');\n    Utils.requireNotEmpty(typeName, 'typeName');\n    this.queryString = Utils.appendSegment(this.queryString, typeName);\n    this.addSegment(ODataQuery.TYPE_NAME);\n    return this;\n  }\n\n  property(property: string): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.PROPERTY), ODataQuery.PROPERTY);\n    if (this.lastSegment !== ODataQuery.ENTITY_KEY && this.lastSegment !== ODataQuery.SINGLETON) {\n      throw new Error('property can only be appended to entityKey or singleton');\n    }\n    Utils.requireNotNullNorUndefined(property, 'property');\n    Utils.requireNotEmpty(property, 'property');\n    this.queryString = Utils.appendSegment(this.queryString, property);\n    this.addSegment(ODataQuery.PROPERTY);\n    return this;\n  }\n\n  navigationProperty(navigationProperty: string): ODataQuery {\n    if (this.lastSegment !== ODataQuery.ENTITY_KEY && this.lastSegment !== ODataQuery.SINGLETON && this.lastSegment !== ODataQuery.TYPE_NAME) {\n      throw new Error('navigationProperty can only be appended to entityKey, singleton or typeName');\n    }\n    Utils.requireNotNullNorUndefined(navigationProperty, 'navigationProperty');\n    Utils.requireNotEmpty(navigationProperty, 'navigationProperty');\n    this.queryString = Utils.appendSegment(this.queryString, navigationProperty);\n    this.addSegment(ODataQuery.NAVIGATION_PROPERTY);\n    return this;\n  }\n\n  ref(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.REF), ODataQuery.REF);\n    if (this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('ref can only be appended to navigationProperty');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$REF);\n    this.addSegment(ODataQuery.REF);\n    return this;\n  }\n\n  value(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.VALUE), ODataQuery.VALUE);\n    if (this.lastSegment !== ODataQuery.PROPERTY) {\n      throw new Error('value can only be appended to property');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$VALUE);\n    this.addSegment(ODataQuery.VALUE);\n    return this;\n  }\n\n  countSegment(): ODataQuery {\n    Utils.requireNullOrUndefined(this.getSegment(ODataQuery.COUNT), ODataQuery.COUNT);\n    if (this.lastSegment !== ODataQuery.ENTITY_SET && this.lastSegment !== ODataQuery.NAVIGATION_PROPERTY) {\n      throw new Error('count can only be appended to entitySet or navigationProperty');\n    }\n    this.queryString = Utils.appendSegment(this.queryString, ODataQuery.$COUNT);\n    this.addSegment(ODataQuery.COUNT);\n    return this;\n  }\n\n  functionCall(functionCall: string): ODataQuery {\n    Utils.requireNotNullNorUndefined(functionCall, 'functionCall');\n    Utils.requireNotEmpty(functionCall, 'functionCall');\n    this.queryString = Utils.appendSegment(this.queryString, functionCall);\n    this.addSegment(ODataQuery.FUNCTION_CALL);\n    return this;\n  }\n\n  actionCall(actionCall: string): ODataQuery {\n    Utils.requireNotNullNorUndefined(actionCall, 'actionCall');\n    Utils.requireNotEmpty(actionCall, 'actionCall');\n    this.queryString = Utils.appendSegment(this.queryString, actionCall);\n    this.addSegment(ODataQuery.ACTION_CALL);\n    return this;\n  }\n\n  batch(): ODataQueryBatch {\n    return new ODataQueryBatch(this.odataService, this.serviceRoot);\n  }\n\n  // QUERY OPTIONS\n\n  select(select: string | string[]): ODataQuery {\n    this.queryOptions.select(select);\n    return this;\n  }\n\n  filter(filter: string | Filter): ODataQuery {\n    this.queryOptions.filter(filter);\n    return this;\n  }\n\n  expand(expand: string | Expand | Expand[]): ODataQuery {\n    this.queryOptions.expand(expand);\n    return this;\n  }\n\n  orderby(orderby: string | Orderby[]): ODataQuery {\n    this.queryOptions.orderby(orderby);\n    return this;\n  }\n\n  search(search: string | Search): ODataQuery {\n    this.queryOptions.search(search);\n    return this;\n  }\n\n  skip(skip: number): ODataQuery {\n    this.queryOptions.skip(skip);\n    return this;\n  }\n\n  top(top: number): ODataQuery {\n    this.queryOptions.top(top);\n    return this;\n  }\n\n  countOption(count: boolean): ODataQuery {\n    this.queryOptions.count(count);\n    return this;\n  }\n\n  customOption(key: string, value: string) {\n    this.queryOptions.customOption(key, value);\n    return this;\n  }\n\n  format(format: string): ODataQuery {\n    this.queryOptions.format(format);\n    return this;\n  }\n\n  // QUERY EXECUTION\n\n  get(httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.get(this, httpOptions);\n  }\n\n  post(body: any, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.post(this, body, httpOptions);\n  }\n\n  patch(body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.patch(this, body, etag, httpOptions);\n  }\n\n  put(body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.put(this, body, etag, httpOptions);\n  }\n\n  delete(etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    return this.odataService.delete(this, etag, httpOptions);\n  }\n\n  toString(): string {\n    let res: string = this.queryString;\n    if (Utils.isNotNullNorUndefined(this.queryOptions) && !this.queryOptions.isEmpty()) {\n      res += '?' + this.queryOptions.toString();\n    }\n    return res;\n  }\n\n  protected getSegment(segment: string): string {\n    Utils.requireNotNull(segment, 'segment');\n    const res: string = this.segments.find((value: string, index: number, segments: string[]) => {\n      return value === segment;\n    });\n    return res;\n  }\n\n  protected addSegment(segment: string): void {\n    Utils.requireNotNull(segment, 'segment');\n    this.segments.push(segment);\n    if (Utils.isNotNullNorUndefined(this.segments) && this.segments.length) {\n      this.lastSegment = this.segments[this.segments.length - 1];\n    }\n  }\n}\n","export class QuotedString {\n    constructor(private value: string) { }\n    toString(): string {\n        return this.value;\n    }\n}\n","export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n","import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n","import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n","export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n","export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n","export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n","import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n","import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n","import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n","export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n","import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n","import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n","import { Utils } from '../utils/utils';\nexport class EntitySet<T> {\n    private entities: T[];\n    private count: number;\n\n    constructor(entities: T[], count: number) {\n        Utils.requireNotNullNorUndefined(entities, 'entities');\n        this.entities = entities;\n        this.count = count;\n    }\n\n    getEntities(): T[] {\n        return this.entities;\n    }\n\n    getCount(): number {\n        return this.count;\n    }\n}\n","import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Utils } from '../utils/utils';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\n\nexport enum FieldType {\n    ATTRIBUTE, TAG\n}\nexport class Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class Metadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(Metadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, Metadata.TAG_REFERENCE, [\n                new Field(Metadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(Metadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(Metadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(Metadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, Metadata.TAG_SCHEMA, [\n                new Field(Metadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(Metadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(Metadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(Metadata.TAG_ACTION, FieldType.TAG),\n                new Field(Metadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(Metadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(Metadata.TAG_TERM, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (Utils.isNullOrUndefined(attributes)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr = attributes.getNamedItem('Version');\n        if (Utils.isNullOrUndefined(attr)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion: string = attr.nodeValue;\n        if (odataVersion !== '4.0') {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index < children.length; index++) {\n            const element: Element = children.item(index);\n\n            if (element.nodeName !== tag) {\n                continue;\n            }\n\n            const attributes: NamedNodeMap = element.attributes;\n            const fieldValues: any[] = this.getFieldValues(fieldNames, attributes, element);\n            if (Utils.isNullOrUndefined(objects)) {\n                objects = [];\n            }\n            switch (tag) {\n                case Metadata.TAG_REFERENCE:\n                    objects.push(new CsdlReference(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_INCLUDE:\n                    objects.push(new CsdlInclude(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_INCLUDE_ANNOTATIONS:\n                    objects.push(new CsdlIncludeAnnotations(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_TERM:\n                    objects.push(new CsdlTerm(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8],\n                        fieldValues[9]\n                    ));\n                    break;\n                case Metadata.TAG_ANNOTATIONS:\n                    objects.push(new CsdlAnnotations(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]\n                    ));\n                    break;\n                case Metadata.TAG_ANNOTATION:\n                    objects.push(new CsdlAnnotation(\n                        fieldValues[0],\n                        fieldValues[1]\n                    ));\n                    break;\n                case Metadata.TAG_SCHEMA:\n                    objects.push(new CsdlSchema(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8],\n                        fieldValues[9],\n                        fieldValues[10],\n                        fieldValues[11]));\n                    break;\n                case Metadata.TAG_ENUM_TYPE:\n                    objects.push(new CsdlEnumType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_COMPLEX_TYPE:\n                    objects.push(new CsdlComplexType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]));\n                    break;\n                case Metadata.TAG_ENTITY_TYPE:\n                    objects.push(new CsdlEntityType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7]));\n                    break;\n                case Metadata.TAG_FUNCTION:\n                    objects.push(new CsdlFunction(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]));\n                    break;\n                case Metadata.TAG_MEMBER:\n                    objects.push(new CsdlEnumMember(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_PROPERTY:\n                    objects.push(new CsdlProperty(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7],\n                        fieldValues[8]));\n                    break;\n                case Metadata.TAG_PROPERTY_REF:\n                    objects.push(new CsdlPropertyRef(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_NAVIGATION_PROPERTY:\n                    objects.push(new CsdlNavigationProperty(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6]));\n                    break;\n                case Metadata.TAG_REFERENTIAL_CONSTRAINT:\n                    objects.push(new CsdlReferentialConstraint(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_PARAMETER:\n                    objects.push(new CsdlParameter(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6]));\n                    break;\n                case Metadata.TAG_ACTION:\n                    objects.push(new CsdlAction(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4]));\n                    break;\n                case Metadata.TAG_ENTITY_SET:\n                    objects.push(new CsdlEntitySet(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_SINGLETON:\n                    objects.push(new CsdlSingleton(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_FUNCTION_IMPORT:\n                    objects.push(new CsdlFunctionImport(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3]));\n                    break;\n                case Metadata.TAG_ACTION_IMPORT:\n                    objects.push(new CsdlActionImport(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2]));\n                    break;\n                case Metadata.TAG_NAVIGATION_PROPERTY_BINDING:\n                    objects.push(new CsdlNavigationPropertyBinding(\n                        fieldValues[0],\n                        fieldValues[1]));\n                    break;\n                case Metadata.TAG_TYPE_DEFINITION:\n                    objects.push(new CsdlTypeDefinition(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5],\n                        fieldValues[6],\n                        fieldValues[7]));\n                    break;\n                default: throw new Error('Unknwon tag:' + tag);\n            }\n        }\n\n        return objects;\n    }\n\n    protected getObject(parentElement: Element, tag: string, fieldNames: Field[]): any {\n        let object: any;\n\n        const children: HTMLCollection = parentElement.children;\n        let element: Element;\n        for (let index = 0; index < children.length; index++) {\n            if (children.item(index).nodeName === tag) {\n                if (Utils.isNotNullNorUndefined(element)) {\n                    throw new Error('Expected one ' + tag);\n                }\n                element = children.item(index);\n            }\n        }\n\n        if (Utils.isNotNullNorUndefined(element)) {\n            const attributes: NamedNodeMap = element.attributes;\n            const fieldValues: any[] = this.getFieldValues(fieldNames, attributes, element);\n            switch (tag) {\n                case Metadata.TAG_KEY:\n                    object = new CsdlKey(fieldValues[0]);\n                    break;\n                case Metadata.TAG_RETURN_TYPE:\n                    object = new CsdlReturnType(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]);\n                    break;\n                case Metadata.TAG_ENTITY_CONTAINER:\n                    object = new CsdlEntityContainer(\n                        fieldValues[0],\n                        fieldValues[1],\n                        fieldValues[2],\n                        fieldValues[3],\n                        fieldValues[4],\n                        fieldValues[5]);\n                    break;\n                case Metadata.TAG_ON_DELETE:\n                    object = new CsdlOnDelete(\n                        fieldValues[0]);\n                    break;\n                default: throw new Error('Unknwon tag:' + tag);\n            }\n        }\n\n        return object;\n    }\n\n    protected getFieldValues(fields: Field[], attributes: NamedNodeMap, element: Element): any[] {\n        const fieldValues: any[] = [];\n\n        for (const field of fields) {\n            if (field.fieldType === FieldType.TAG) {\n                fieldValues.push(this.getFieldValueByTag(field, element));\n            } else if (field.fieldType === FieldType.ATTRIBUTE) {\n                fieldValues.push(this.getFieldValueByAttribute(field, attributes));\n            } else {\n                throw new Error('Unknown field type: ' + field.fieldType);\n            }\n        }\n\n        return fieldValues;\n    }\n\n    protected getFieldValueByAttribute(field: Field, attributes: NamedNodeMap): any {\n        switch (field.name) {\n            case Metadata.ATTRIBUTE_VERSION:\n            case Metadata.ATTRIBUTE_URI:\n            case Metadata.ATTRIBUTE_NAMESPACE:\n            case Metadata.ATTRIBUTE_ALIAS:\n            case Metadata.ATTRIBUTE_TERM_NAMESPACE:\n            case Metadata.ATTRIBUTE_TERM:\n            case Metadata.ATTRIBUTE_QUALIFIER:\n            case Metadata.ATTRIBUTE_TARGET_NAMESPACE:\n            case Metadata.ATTRIBUTE_NAME:\n            case Metadata.ATTRIBUTE_TYPE:\n            case Metadata.ATTRIBUTE_SRID:\n            case Metadata.ATTRIBUTE_DEFAULT_VALUE:\n            case Metadata.ATTRIBUTE_PARTNER:\n            case Metadata.ATTRIBUTE_PROPERTY:\n            case Metadata.ATTRIBUTE_REFERENCED_PROPERTY:\n            case Metadata.ATTRIBUTE_BASE_TYPE:\n            case Metadata.ATTRIBUTE_ENTITY_SET_PATH:\n            case Metadata.ATTRIBUTE_ENTITY_TYPE:\n            case Metadata.ATTRIBUTE_PATH:\n            case Metadata.ATTRIBUTE_TARGET:\n            case Metadata.ATTRIBUTE_FUNCTION:\n            case Metadata.ATTRIBUTE_ACTION:\n            case Metadata.ATTRIBUTE_ENTITY_SET:\n            case Metadata.ATTRIBUTE_UNDERLYING_TYPE:\n            case Metadata.ATTRIBUTE_EXTENDS:\n            case Metadata.ATTRIBUTE_BASE_TERM:\n            case Metadata.ATTRIBUTE_APPLIES_TO:\n                return this.getAttributeValue(attributes, field.name);\n            case Metadata.ATTRIBUTE_NULLABLE:\n            case Metadata.ATTRIBUTE_UNICODE:\n            case Metadata.ATTRIBUTE_OPEN_TYPE:\n            case Metadata.ATTRIBUTE_HAS_STREAM:\n            case Metadata.ATTRIBUTE_IS_BOUND:\n            case Metadata.ATTRIBUTE_IS_COMPOSABLE:\n            case Metadata.ATTRIBUTE_CONTAINS_TARGET:\n            case Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT:\n            case Metadata.ATTRIBUTE_ABSTRACT:\n            case Metadata.ATTRIBUTE_IS_FLAGS:\n                return this.propertyValueToBoolean(this.getAttributeValue(attributes, field.name));\n            case Metadata.ATTRIBUTE_VALUE:\n            case Metadata.ATTRIBUTE_MAX_LENGTH:\n            case Metadata.ATTRIBUTE_PRECISION:\n            case Metadata.ATTRIBUTE_SCALE:\n                return this.propertyValueToNumber(this.getAttributeValue(attributes, field.name));\n            default: throw new Error('Unknwon attribute:' + field.name);\n        }\n    }\n\n    protected getFieldValueByTag(field: Field, element: Element): any[] {\n        switch (field.name) {\n            case Metadata.TAG_INCLUDE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_INCLUDE_ANNOTATIONS:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TERM_NAMESPACE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TARGET_NAMESPACE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_TERM:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_BASE_TERM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_DEFAULT_VALUE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_APPLIES_TO, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ANNOTATIONS:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TARGET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ANNOTATION, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ANNOTATION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TERM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_QUALIFIER, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ENUM_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_MEMBER, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_UNDERLYING_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_IS_FLAGS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_COMPLEX_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_BASE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_OPEN_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ABSTRACT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ENTITY_TYPE:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_KEY, FieldType.TAG),\n                    new Field(Metadata.TAG_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_BASE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_OPEN_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_HAS_STREAM, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ABSTRACT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_FUNCTION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_RETURN_TYPE, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_IS_BOUND, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_IS_COMPOSABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PARAMETER, FieldType.TAG)\n                ]);\n            case Metadata.TAG_MEMBER:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_VALUE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_PROPERTY:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNICODE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_DEFAULT_VALUE, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_KEY:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.TAG_PROPERTY_REF, FieldType.TAG)\n                ]);\n            case Metadata.TAG_PROPERTY_REF:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_NAVIGATION_PROPERTY:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PARTNER, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_CONTAINS_TARGET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_REFERENTIAL_CONSTRAINT, FieldType.TAG),\n                    new Field(Metadata.TAG_ON_DELETE, FieldType.TAG)\n                ]);\n            case Metadata.TAG_REFERENTIAL_CONSTRAINT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_PROPERTY, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_REFERENCED_PROPERTY, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ON_DELETE:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_ACTION, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_PARAMETER:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_RETURN_TYPE:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_NULLABLE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ACTION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_RETURN_TYPE, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_IS_BOUND, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_PARAMETER, FieldType.TAG)\n                ]);\n            case Metadata.TAG_ENTITY_CONTAINER:\n                return this.getObject(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_EXTENDS, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ENTITY_SET, FieldType.TAG),\n                    new Field(Metadata.TAG_SINGLETON, FieldType.TAG),\n                    new Field(Metadata.TAG_FUNCTION_IMPORT, FieldType.TAG),\n                    new Field(Metadata.TAG_ACTION_IMPORT, FieldType.TAG)\n                ]);\n            case Metadata.TAG_ENTITY_SET:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY_BINDING, FieldType.TAG),\n                    new Field(Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_SINGLETON:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_NAVIGATION_PROPERTY_BINDING, FieldType.TAG)\n                ]);\n            case Metadata.TAG_FUNCTION_IMPORT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_FUNCTION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_ACTION_IMPORT:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ACTION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_ENTITY_SET, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_NAVIGATION_PROPERTY_BINDING:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_PATH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_TARGET, FieldType.ATTRIBUTE)\n                ]);\n            case Metadata.TAG_TYPE_DEFINITION:\n                return this.getObjects(element, field.name, [\n                    new Field(Metadata.ATTRIBUTE_NAME, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNDERLYING_TYPE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_MAX_LENGTH, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_PRECISION, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SCALE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_UNICODE, FieldType.ATTRIBUTE),\n                    new Field(Metadata.ATTRIBUTE_SRID, FieldType.ATTRIBUTE),\n                    new Field(Metadata.TAG_ANNOTATION, FieldType.TAG)\n                ]);\n            default: throw new Error('Unknwon tag:' + field.name);\n        }\n    }\n\n    protected getAttributeValue(attributes: NamedNodeMap, attributeName: string): string {\n        const attribute: Attr = attributes.getNamedItem(attributeName);\n        if (Utils.isNotNullNorUndefined(attribute)) {\n            return attribute.nodeValue;\n        }\n        return undefined;\n    }\n\n    protected propertyValueToNumber(attributeValue: string): number {\n        return Utils.isNotNullNorUndefined(attributeValue) ? Number(attributeValue) : undefined;\n    }\n\n    protected propertyValueToBoolean(attributeValue: string): boolean {\n        return Utils.isNotNullNorUndefined(attributeValue) ? attributeValue === 'true' : undefined;\n    }\n}\n","import { HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\n\nexport abstract class ODataResponseAbstract {\n    private httpResponse: HttpResponse<string>;\n\n    constructor(httpResponse: HttpResponse<string>) {\n        this.httpResponse = httpResponse;\n    }\n\n    getHttpResponse() {\n        return this.httpResponse;\n    }\n\n    isOk(): boolean {\n        return this.httpResponse.ok;\n    }\n\n    getBodyAsJson(): any {\n        return null;\n    }\n\n    getBodyAsText(): string {\n        return this.httpResponse.body;\n    }\n\n    toString(): string {\n        let res = `${this.httpResponse.status} ${this.httpResponse.statusText}\\n`;\n\n        const headers = this.httpResponse.headers;\n        for (const key of headers.keys()) {\n            res += key + ': ';\n            let valueString = '';\n            for (const value of headers.getAll(key)) {\n                if (valueString.length) {\n                    valueString += ' ';\n                }\n                valueString += value;\n            }\n            res += valueString + '\\n';\n        }\n\n        const json = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json)) {\n            res += JSON.stringify(json, null, 4);\n        } else {\n            res += this.getBodyAsText();\n        }\n        return res;\n    }\n}\n","import { HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\nimport { ODataResponse } from './odata-response';\nimport { ODataResponseAbstract } from './odata-response-abstract';\n\nexport class ODataResponseBatch extends ODataResponseAbstract {\n    private static readonly CONTENT_TYPE = 'Content-Type';\n    private static readonly CONTENT_ID = 'Content-ID';\n    private static readonly HTTP11 = 'HTTP/1.1';\n    private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n    private static readonly NEWLINE = '\\r\\n';\n    private static readonly MULTIPART_MIXED = 'multipart/mixed';\n\n    private odataResponses: ODataResponse[];\n\n    constructor(httpResponse: HttpResponse<string>) {\n        super(httpResponse);\n        this.odataResponses = [];\n        this.parseResponses();\n    }\n\n    getODataResponses(): ODataResponse[] {\n        return this.odataResponses;\n    }\n\n    protected parseResponses(): void {\n        const contentType: string = this.getHttpResponse().headers.get(ODataResponseBatch.CONTENT_TYPE);\n        const boundaryDelimiterBatch: string = this.getBoundaryDelimiter(contentType);\n        const boundaryEndBatch: string = this.getBoundaryEnd(boundaryDelimiterBatch);\n\n        const batchBody: string = this.getBodyAsText();\n        const batchBodyLines: string[] = batchBody.split(ODataResponseBatch.NEWLINE);\n\n        let odataResponseCS: ODataResponse[];\n        let contentId: number;\n        let boundaryDelimiterCS;\n        let boundaryEndCS;\n        let batchPartStartIndex;\n        for (let index = 0; index < batchBodyLines.length; index++) {\n            const batchBodyLine: string = batchBodyLines[index];\n\n            if (batchBodyLine.startsWith(ODataResponseBatch.CONTENT_TYPE)) {\n                const contentTypeValue: string = this.getHeaderValue(batchBodyLine);\n                if (contentTypeValue === ODataResponseBatch.MULTIPART_MIXED) {\n                    odataResponseCS = [];\n                    contentId = undefined;\n                    boundaryDelimiterCS = this.getBoundaryDelimiter(batchBodyLine);\n                    boundaryEndCS = this.getBoundaryEnd(boundaryDelimiterCS);\n                    batchPartStartIndex = undefined;\n                }\n                continue;\n            } else if (Utils.isNotNullNorUndefined(odataResponseCS) && batchBodyLine.startsWith(ODataResponseBatch.CONTENT_ID)) {\n                contentId = Number(this.getHeaderValue(batchBodyLine));\n            } else if (batchBodyLine.startsWith(ODataResponseBatch.HTTP11)) {\n                batchPartStartIndex = index;\n            } else if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS\n                || batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                if (!batchPartStartIndex) {\n                    continue;\n                }\n\n                const odataResponse: ODataResponse = this.createODataResponse(batchBodyLines, batchPartStartIndex, index - 1);\n                if (Utils.isNotNullNorUndefined(odataResponseCS)) {\n                    odataResponseCS[contentId] = odataResponse;\n                } else {\n                    this.odataResponses.push(odataResponse);\n                }\n\n                if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS) {\n                    batchPartStartIndex = index + 1;\n                } else if (batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                    if (Utils.isNotNullNorUndefined(odataResponseCS)) {\n                        for (const response of odataResponseCS) {\n                            if (Utils.isNotNullNorUndefined(response)) {\n                                this.odataResponses.push(response);\n                            }\n                        }\n                    }\n                    odataResponseCS = undefined;\n                    boundaryDelimiterCS = undefined;\n                    boundaryEndCS = undefined;\n                    batchPartStartIndex = undefined;\n                }\n            }\n        }\n    }\n\n    protected getHeaderValue(header: string): string {\n        let res: string = header.split(';')[0].trim();\n        res = res.split(':')[1].trim();\n        return res;\n    }\n\n    protected getBoundaryDelimiter(contentType: string): string {\n        const contentTypeParts: string[] = contentType.split(';');\n        if (contentTypeParts.length === 2) {\n            const boundary: string = contentType.split(';')[1].trim();\n            const boundaryDelimiter: string = ODataResponseBatch.BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n            return boundaryDelimiter;\n        } else {\n            return '';\n        }\n    }\n\n    protected getBoundaryEnd(boundaryDelimiter: string): string {\n        if (!boundaryDelimiter.length) {\n            return '';\n        }\n        const boundaryEnd: string = boundaryDelimiter + ODataResponseBatch.BOUNDARY_PREFIX_SUFFIX;\n        return boundaryEnd;\n    }\n\n    protected createODataResponse(batchBodyLines: string[], batchPartStartIndex: number, batchPartEndIndex: number): ODataResponse {\n        let index: number = batchPartStartIndex;\n        const statusLine: string = batchBodyLines[index];\n        const statusLineParts: string[] = batchBodyLines[index].split(' ');\n        const status: string = statusLineParts[1];\n        const statusTextIndex = statusLine.indexOf(status) + status.length + 1;\n        const statusText: string = statusLine.substring(statusTextIndex);\n\n        let httpHeaders: HttpHeaders = new HttpHeaders();\n        for (++index; index <= batchPartEndIndex; index++) {\n            const batchBodyLine: string = batchBodyLines[index];\n\n            if (batchBodyLine === '') {\n                break;\n            }\n\n            const batchBodyLineParts: string[] = batchBodyLine.split(': ');\n            httpHeaders = httpHeaders.append(batchBodyLineParts[0].trim(), batchBodyLineParts[1].trim());\n        }\n\n        let body = '';\n        for (; index <= batchPartEndIndex; index++) {\n            body += batchBodyLines[index];\n        }\n\n        return new ODataResponse(new HttpResponse({\n            body: body,\n            headers: httpHeaders,\n            status: Number(status),\n            statusText: statusText\n        }));\n    }\n}\n","import { HttpResponse } from '@angular/common/http';\n\nimport { Utils } from '../utils/utils';\nimport { EntitySet } from './entity-collection';\nimport { Metadata } from './metadata';\nimport { ODataResponseAbstract } from './odata-response-abstract';\nimport { ODataResponseBatch } from './odata-response-batch';\n\nexport class ODataResponse extends ODataResponseAbstract {\n    private static readonly VALUE = 'value';\n    private static readonly ODATA_COUNT = '@odata.count';\n\n    constructor(httpResponse: HttpResponse<string>) {\n        super(httpResponse);\n    }\n\n    getBodyAsJson(): any {\n        const contentType: string = this.getHttpResponse().headers.get('Content-Type');\n        if (Utils.isNotNullNorUndefined(contentType) && contentType.includes('json')) {\n            try {\n                return JSON.parse(this.getBodyAsText());\n            } catch (error) {\n                return null;\n            }\n        }\n        return null;\n    }\n\n    toMetadata(): Metadata {\n        const xml: string = this.getBodyAsText();\n        return new Metadata(xml);\n    }\n\n    toEntitySet<T>(): EntitySet<T> {\n        const json: any = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json) && json.hasOwnProperty(ODataResponse.VALUE)) {\n            let count: number = null;\n            if (json.hasOwnProperty(ODataResponse.ODATA_COUNT)) {\n                count = json[ODataResponse.ODATA_COUNT];\n            }\n            return new EntitySet<T>(json[ODataResponse.VALUE], count);\n        }\n        return null;\n    }\n\n    toEntity<T>(): T {\n        return this.toObject<T>();\n    }\n\n    toPropertyValue<T>(): T {\n        const json: any = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json)) {\n            if (json.hasOwnProperty(ODataResponse.VALUE)) {\n                return <T>json[ODataResponse.VALUE];\n            }\n            return null;\n        } else {\n            return <T>JSON.parse(this.getBodyAsText());\n        }\n    }\n\n    toComplexValue<T>(): T {\n        return this.toObject<T>();\n    }\n\n    toCount(): number {\n        return Number(this.getBodyAsText());\n    }\n\n    toODataResponseBatch(): ODataResponseBatch {\n        return new ODataResponseBatch(this.getHttpResponse());\n    }\n\n    protected toObject<T>(): T {\n        const json: any = this.getBodyAsJson();\n        if (Utils.isNotNullNorUndefined(json)) {\n            return <T>json;\n        }\n        return null;\n    }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport interface HttpOptionsI {\n    headers?: HttpHeaders;\n    params?: HttpParams;\n    reportProgress?: boolean;\n    withCredentials?: boolean;\n}\n\nexport class HttpOptions implements HttpOptionsI {\n    constructor(\n        public headers?: HttpHeaders,\n        public observe: 'response' = 'response',\n        public params?: HttpParams,\n        public reportProgress?: boolean,\n        public responseType: 'text' = 'text',\n        public withCredentials?: boolean\n    ) { }\n}\n","\nimport {map} from 'rxjs/operators';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ODataQuery } from '../odata-query/odata-query';\nimport { ODataQueryAbstract } from '../odata-query/odata-query-abstract';\nimport { ODataResponse } from '../odata-response/odata-response';\nimport { Utils } from '../utils/utils';\nimport { HttpOptions, HttpOptionsI } from './http-options';\n\n@Injectable()\nexport class ODataService {\n  private static readonly IF_MATCH_HEADER = 'If-Match';\n\n  constructor(private http: HttpClient) { }\n\n  get(odataQuery: ODataQuery, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    const options: HttpOptions = this.createHttpOptions(httpOptions);\n    return this.http.get(url, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  post(odataQuery: ODataQueryAbstract, body: any, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    const options: HttpOptions = this.createHttpOptions(httpOptions);\n    return this.http.post(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  patch(odataQuery: ODataQuery, body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.patch(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  put(odataQuery: ODataQuery, body: any, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.put(url, body, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  delete(odataQuery: ODataQuery, etag?: string, httpOptions?: HttpOptionsI): Observable<ODataResponse> {\n    const url: string = odataQuery.toString();\n    let options: HttpOptions = this.createHttpOptions(httpOptions);\n    options = this.mergeETag(options, etag);\n    return this.http.delete(url, options).pipe(\n      map(response => new ODataResponse(response)));\n  }\n\n  protected createHttpOptions(httpOptions: HttpOptionsI): HttpOptions {\n    if (httpOptions instanceof HttpOptions) {\n      return httpOptions;\n    }\n    return Object.assign(new HttpOptions(), httpOptions);\n  }\n\n  protected mergeETag(httpOptions: HttpOptions, etag: string): HttpOptions {\n    if (Utils.isNullOrUndefined(etag)) {\n      return httpOptions;\n    }\n    if (Utils.isNullOrUndefined(httpOptions)) {\n      httpOptions = new HttpOptions();\n    }\n    if (Utils.isNullOrUndefined(httpOptions.headers)) {\n      httpOptions.headers = new HttpHeaders();\n    }\n\n    httpOptions.headers[ODataService.IF_MATCH_HEADER] = etag;\n\n    return httpOptions;\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { ODataService } from './odata-service/odata.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [ODataService]\n})\nexport class ODataModule { }\n","import { QueryOptions } from './query-options';\nimport { Utils } from '../utils/utils';\nimport { Filter } from './filter/filter';\nimport { Orderby } from './orderby';\nimport { Search } from './search/search';\n\nexport class Expand {\n    static readonly SEPARATOR = ';';\n    private entitySet: string;\n    private queryOptions: QueryOptions;\n\n    constructor(entitySet: string) {\n        Utils.requireNotNullNorUndefined(entitySet, 'entitySet');\n        Utils.requireNotEmpty(entitySet, 'entitySet');\n        this.entitySet = entitySet;\n        this.queryOptions = new QueryOptions(Expand.SEPARATOR);\n    }\n\n    // QUERY OPTIONS\n\n    select(select: string | string[]): Expand {\n        this.queryOptions.select(select);\n        return this;\n    }\n\n    filter(filter: string | Filter): Expand {\n        this.queryOptions.filter(filter);\n        return this;\n    }\n\n    expand(expand: string | Expand | Expand[]): Expand {\n        this.queryOptions.expand(expand);\n        return this;\n    }\n\n    orderby(orderby: string | Orderby[]): Expand {\n        this.queryOptions.orderby(orderby);\n        return this;\n    }\n\n    search(search: string | Search): Expand {\n        this.queryOptions.search(search);\n        return this;\n    }\n\n    skip(skip: number): Expand {\n        this.queryOptions.skip(skip);\n        return this;\n    }\n\n    top(top: number): Expand {\n        this.queryOptions.top(top);\n        return this;\n    }\n\n    customOption(key: string, value: string) {\n        this.queryOptions.customOption(key, value);\n        return this;\n    }\n\n    toString(): string {\n        let res: string = this.entitySet;\n        if (!Utils.isEmpty(this.queryOptions)) {\n            res += '(' + this.queryOptions + ')';\n        }\n        return res;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isEmpty(this.entitySet);\n    }\n}\n","import { Utils } from '../../utils/utils';\nimport { Filter } from './filter';\n\nexport class FilterString implements Filter {\n    private filter: string;\n\n    constructor(filter: string) {\n        Utils.requireNotNullNorUndefined(filter, 'filter');\n        Utils.requireNotEmpty(filter, 'filter');\n        this.filter = filter;\n    }\n\n    toString(): string {\n        return this.filter;\n    }\n\n    isEmpty(): boolean {\n        return Utils.isNullOrUndefined(this.filter) || !this.filter.length;\n    }\n}\n","export enum OperatorComparison {\n    EQ, NE, GT, GE, LT, LE, HAS\n}\n\nexport enum OperatorLogical {\n    AND, OR, NOT\n}\n\nexport enum OperatorArithmetic {\n    ADD, SUB, MUL, DIV, MOD\n}\n","import { Utils } from '../utils/utils';\n\nexport enum Order {\n    ASC, DESC\n}\n\nexport class Orderby {\n    private property: string;\n    private order: Order;\n\n    constructor(property: string, order?: Order) {\n        Utils.requireNotNullNorUndefined(property, 'property');\n        this.property = property;\n        this.order = order;\n    }\n\n    toString() {\n        let res = this.property;\n        if (!Utils.isNullOrUndefined(this.order)) {\n            res += ' ' + Order[this.order].toLowerCase();\n        }\n        return res;\n    }\n}\n","import { FilterString } from './filter/filter-string';\nimport { Filter } from './filter/filter';\nimport { Expand } from './expand';\nimport { Utils } from '../utils/utils';\nimport { Orderby } from './orderby';\nimport { Search } from './search/search';\n\nexport class QueryOptions {\n  private _separator: string;\n  private _select: string[];\n  private _filter: Filter;\n  private _expand: Expand[];\n  private _orderby: Orderby[];\n  private _search: string | Search;\n  private _skip: number;\n  private _top: number;\n  private _count: boolean;\n  private _customOptions: Map<string, string>;\n  private _format: string;\n\n  constructor(separator: string) {\n    Utils.requireNotNullNorUndefined(separator, 'separator');\n    Utils.requireNotEmpty(separator, 'separator');\n    this._separator = separator;\n    this._select = null;\n    this._filter = null;\n    this._expand = null;\n    this._orderby = null;\n    this._search = null;\n    this._skip = null;\n    this._top = null;\n    this._count = null;\n    this._customOptions = null;\n    this._format = null;\n  }\n\n  select(select: string | string[]): QueryOptions {\n    if (Utils.isNullOrUndefined(select) || Utils.isEmpty(select)) {\n      this._select = null;\n    } else {\n      this._select = typeof (select) === 'string' ? [select] : select;\n    }\n    return this;\n  }\n\n  filter(filter: string | Filter): QueryOptions {\n    if (Utils.isNullOrUndefined(filter) || Utils.isEmpty(filter)) {\n      this._filter = null;\n    } else {\n      this._filter = typeof (filter) === 'string' ? new FilterString(filter) : filter;\n    }\n    return this;\n  }\n\n  expand(expand: string | Expand | Expand[]): QueryOptions {\n    if (Utils.isNullOrUndefined(expand) || Utils.isEmpty(expand)) {\n      this._expand = null;\n    } else {\n      this._expand = typeof (expand) === 'string' ? [new Expand(expand)] : expand instanceof Expand ? [expand] : expand;\n    }\n    return this;\n  }\n\n  orderby(orderby: string | Orderby[]): QueryOptions {\n    if (Utils.isNullOrUndefined(orderby) || Utils.isEmpty(orderby)) {\n      this._orderby = null;\n    } else {\n      this._orderby = typeof (orderby) === 'string' ? [new Orderby(orderby)] : orderby;\n    }\n    return this;\n  }\n\n  search(search: string | Search): QueryOptions {\n    this._search = search;\n    return this;\n  }\n\n  skip(skip: number): QueryOptions {\n    Utils.requireNotNegative(skip, 'skip');\n    this._skip = skip;\n    return this;\n  }\n\n  top(top: number): QueryOptions {\n    Utils.requireNotNegative(top, 'top');\n    this._top = top;\n    return this;\n  }\n\n  count(count: boolean): QueryOptions {\n    this._count = count;\n    return this;\n  }\n\n  format(format: string): QueryOptions {\n    this._format = format;\n    return this;\n  }\n\n  customOption(key: string, value: string) {\n    Utils.requireNotNullNorUndefined(key, 'key');\n    if (Utils.isNullOrUndefined(this._customOptions)) {\n      this._customOptions = new Map<string, string>();\n    }\n    this._customOptions.set(key, value);\n    return this;\n  }\n\n  toString(): string {\n    // query options\n    let queryOptions = '';\n\n    // add select\n    if (!Utils.isNullOrUndefined(this._select) && !Utils.isEmpty(this._select)) {\n      queryOptions += '$select=';\n      if (typeof (this._select) === 'string') {\n        queryOptions += this._select;\n      } else {\n        queryOptions += Utils.toString(this._select);\n      }\n    }\n\n    // add filter\n    if (!Utils.isNullOrUndefined(this._filter) && !Utils.isEmpty(this._filter)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$filter=' + encodeURIComponent(this._filter.toString());\n    }\n\n    // add expand\n    if (!Utils.isNullOrUndefined(this._expand) && !Utils.isEmpty(this._expand)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$expand=';\n      if (typeof (this._expand) === 'string') {\n        queryOptions += this._expand;\n      } else {\n        queryOptions += Utils.toString(this._expand);\n      }\n    }\n\n    // add orderby\n    if (!Utils.isNullOrUndefined(this._orderby) && !Utils.isEmpty(this._orderby)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$orderby=';\n      if (typeof (this._orderby) === 'string') {\n        queryOptions += this._orderby;\n      } else {\n        queryOptions += Utils.toString(this._orderby);\n      }\n    }\n\n    // add search\n    if (!Utils.isNullOrUndefined(this._search) && !Utils.isEmpty(this._search)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$search=' + encodeURIComponent(this._search.toString());\n    }\n\n    // add skip\n    if (!Utils.isNullOrUndefined(this._skip) && !Utils.isEmpty(this._skip)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$skip=' + this._skip;\n    }\n\n    // add top\n    if (!Utils.isNullOrUndefined(this._top) && !Utils.isEmpty(this._top)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$top=' + this._top;\n    }\n\n    // add count\n    if (!Utils.isNullOrUndefined(this._count) && !Utils.isEmpty(this._count)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$count=' + this._count;\n    }\n\n    // add custom query options\n    if (Utils.isNotNullNorUndefined(this._customOptions) && this._customOptions.size > 0) {\n      this._customOptions.forEach((value: string, key: string, map: Map<string, string>) => {\n        if (Utils.isNotNullNorUndefined(key) && !Utils.isEmpty(key)\n          && Utils.isNotNullNorUndefined(value) && !Utils.isEmpty(value)) {\n          if (queryOptions.length) {\n            queryOptions += this._separator;\n          }\n          queryOptions += key + '=' + encodeURIComponent(value);\n        }\n      });\n    }\n\n    // add format\n    if (!Utils.isNullOrUndefined(this._format) && !Utils.isEmpty(this._format)) {\n      if (queryOptions.length) {\n        queryOptions += this._separator;\n      }\n      queryOptions += '$format=' + this._format;\n    }\n\n    return queryOptions;\n  }\n\n  isEmpty(): boolean {\n    for (const key in this) {\n      if (key === '_purpose' || key === '_separator') {\n        continue;\n      }\n      if (this.hasOwnProperty(key) && !Utils.isEmpty(this[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { OperatorLogical } from '../query-options/operator';\n\nimport { QuotedString } from '../odata-query/quoted-string';\n\nexport class Utils {\n    static isNull(value: any): boolean {\n        return value === null;\n    }\n\n    static isUndefined(value: any): boolean {\n        return value === undefined;\n    }\n\n    static isNullOrUndefined(value: any): boolean {\n        return Utils.isNull(value) || Utils.isUndefined(value);\n    }\n\n    static isNotNullNorUndefined(value: any): boolean {\n        return !Utils.isNull(value) && !Utils.isUndefined(value);\n    }\n\n    static isEmpty(value: any): boolean {\n        if (Utils.isNullOrUndefined(value)\n            || typeof (value) === 'string' && !value.length\n            || value instanceof Array && !value.length\n            || typeof (value.isEmpty) === 'function' && value.isEmpty()) {\n            return true;\n        }\n        if (value instanceof Array && value) {\n            for (const v of value) {\n                if (!Utils.isEmpty(v)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    static requireNull(fieldValue: any, fieldName: string) {\n        if (fieldValue !== null) {\n            throw new Error(fieldName + ' must be null');\n        }\n    }\n\n    static requireUndefined(fieldValue: any, fieldName: string) {\n        if (fieldValue !== undefined) {\n            throw new Error(fieldName + ' must be undefined');\n        }\n    }\n\n    static requireNotNull(fieldValue: any, fieldName: string) {\n        if (fieldValue === null) {\n            throw new Error(fieldName + ' cannot be null');\n        }\n    }\n\n    static requireNotUndefined(fieldValue: any, fieldName: string) {\n        if (fieldValue === undefined) {\n            throw new Error(fieldName + ' cannot be undefined');\n        }\n    }\n\n    static requireNotNullNorUndefined(fieldValue: any, fieldName: string) {\n        Utils.requireNotNull(fieldValue, fieldName);\n        Utils.requireNotUndefined(fieldValue, fieldName);\n    }\n\n    static requireNullOrUndefined(fieldValue: any, fieldName: string) {\n        if (!Utils.isNull(fieldValue) && !Utils.isUndefined(fieldValue)) {\n            throw new Error(fieldName + ' must be null or undefined');\n        }\n    }\n\n    static requireNotEmpty(fieldValue: any, fieldName: string) {\n        if (Utils.isEmpty(fieldValue)) {\n            throw new Error(fieldName + ' cannot be empty');\n        }\n    }\n\n    static requireNotNegative(fieldValue: number, fieldName: string) {\n        if (fieldValue < 0) {\n            throw new Error(fieldName + ' cannot be negative');\n        }\n    }\n\n    static appendSegment(path: string, segment: string): string {\n        Utils.requireNotNullNorUndefined(path, 'path');\n        Utils.requireNotNullNorUndefined(segment, 'segment');\n        if (!path.endsWith('/')) {\n            path += '/';\n        }\n        return path + segment;\n    }\n\n    static removeEndingSeparator(value: string): string {\n        Utils.requireNotNullNorUndefined(value, 'value');\n        if (value.endsWith('/')) {\n            if (value.length === 1) {\n                return '';\n            }\n            return value.substring(0, value.length - 1);\n        }\n        return value;\n    }\n\n    static getValueURI(value: boolean | number | string | QuotedString, encodeURI: boolean): any {\n        Utils.requireNotUndefined(value, 'value');\n        Utils.requireNotNullNorUndefined(encodeURI, 'encodeURI');\n\n        let res: any = value;\n\n        if (typeof (res) === 'string') {\n            // encode uri component\n            if (Utils.isNotNullNorUndefined(encodeURI) && encodeURI) {\n                res = encodeURIComponent(res);\n            }\n        } else if (res instanceof QuotedString) {\n            // escape single quote\n            res = res.toString().replace(/'/g, '\\'\\'');\n\n            // encode uri component\n            if (Utils.isNotNullNorUndefined(encodeURI) && encodeURI) {\n                res = encodeURIComponent(res);\n            }\n\n            // add start/ending quotes\n            res = '\\'' + res + '\\'';\n        }\n\n        // boolean, number\n        return res;\n    }\n\n    static toString(items: any[], operator?: OperatorLogical, operatorUppercase: boolean = false): string {\n        let res = '';\n        if (Utils.isNullOrUndefined(items) || !items.length) {\n            return res;\n        }\n\n        for (const item of items) {\n            if (res.length) {\n                if (Utils.isNotNullNorUndefined(operator)) {\n                    const operatorString: string = Utils.getOperatorString(operator, operatorUppercase);\n                    res += ` ${operatorString} `;\n                } else {\n                    res += ',';\n                }\n            }\n            if (Utils.isNotNullNorUndefined(operator) && operator === OperatorLogical.NOT) {\n                const operatorString: string = Utils.getOperatorString(operator, operatorUppercase);\n                res += `${operatorString} `;\n            }\n\n            res += item;\n        }\n\n        if (Utils.isNotNullNorUndefined(operator)) {\n            return `(${res})`;\n        }\n\n        return res;\n    }\n\n    protected static getOperatorString(operator: OperatorLogical, operatorUppercase: boolean): string {\n        let operatorString: string = OperatorLogical[operator].toLowerCase();\n        if (Utils.isNotNullNorUndefined(operatorUppercase) && operatorUppercase) {\n            operatorString = operatorString.toUpperCase();\n        }\n        return operatorString;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}